import os
import asyncio
import base64
import io

from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo, BufferedInputFile

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
BOT_TOKEN = os.getenv("BOT_TOKEN") 
# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ GitHub Pages —Ä–∞–∑–≤–µ—Ä–Ω—É–ª –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é –≤–∞—à–µ–≥–æ JS –∫–æ–¥–∞
WEB_APP_URL = "https://sergeucher96.github.io/ChatMaker/" 

# --- –ö–û–î –ë–û–¢–ê ---
dp = Dispatcher()
bot = Bot(BOT_TOKEN)

@dp.message(CommandStart())
async def command_start_handler(message: types.Message):
    """
    –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—à–µ—Ç /start
    """
    web_app_button = InlineKeyboardButton(
        text="üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏—Å—Ç–æ—Ä–∏–π",
        web_app=WebAppInfo(
            url=WEB_APP_URL,
            request_fullscreen=True 
        )
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[web_app_button]])
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é.",
        reply_markup=keyboard
    )

# !!! --- –ù–û–í–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –î–ê–ù–ù–´–• –ò–ó WEBAPP --- !!!
@dp.message(F.web_app_data)
async def handle_web_app_data(message: types.Message):
    """
    –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç Web App.
    """
    print("–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç WebApp:", message.web_app_data.data[:50] + "...") # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –º—ã –Ω–∞—á–∞–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫—É
    processing_message = await message.answer("–ü–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ. –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫—É Base64 –∏–∑ –¥–∞–Ω–Ω—ã—Ö
        base64_str = message.web_app_data.data
        
        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É Base64 –≤ –±–∞–π—Ç—ã
        image_bytes = base64.b64decode(base64_str)
        
        # –°–æ–∑–¥–∞–µ–º "—Ñ–∞–π–ª –≤ –ø–∞–º—è—Ç–∏" –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
        image_file = BufferedInputFile(image_bytes, filename="story.png")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await bot.send_photo(
            chat_id=message.chat.id,
            photo=image_file,
            caption="–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –≥–æ—Ç–æ–≤–∞!"
        )
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ..."
        await bot.delete_message(chat_id=message.chat.id, message_id=processing_message.message_id)

    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp:", e)
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        # –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
        await bot.edit_message_text(
            text="–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            chat_id=message.chat.id,
            message_id=processing_message.message_id
        )


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
